# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- Master

pool:
  vmImage: ubuntu-latest

variables:
  newGreengrassComponent: false
  newGreengrassDeployment: false
  
steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'

- script: |
    echo Add other tasks to build, test, and deploy your project.
    echo See https://aka.ms/yaml
  displayName: 'Run a multi-line script'
  
- task: S3Upload@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    bucketName: 'wildlifecamera.cloudystuff.info'
    sourceFolder: '$(Build.SourcesDirectory)/AWS/Cloudformation'
    globExpressions: '*(*.yml|*.json)'
    targetFolder: 'cloudformation'
    createBucket: true
    keyManagement: 'awsManaged'
    encryptionAlgorithm: 'AES256'

- task: S3Upload@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    bucketName: 'wildlifecamera.cloudystuff.info'
    sourceFolder: '$(Build.SourcesDirectory)/AWS/Lambda'
    globExpressions: '**'
    targetFolder: 'Lambda'
    keyManagement: 'awsManaged'
    encryptionAlgorithm: 'AES256'

- task: CloudFormationCreateOrUpdateStack@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    stackName: 'WildlifeCameraLambda'
    templateSource: 'file'
    templateFile: '$(Build.SourcesDirectory)/AWS/Cloudformation/catalogImage.yml'
    globExpressions: '*(*.yml|*.json)'
    targetFolder: 'cloudformation'
    createBucket: true
    keyManagement: 'awsManaged'
    encryptionAlgorithm: 'AES256'

- task: S3Upload@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    bucketName: 'greengrass-component-artifacts-392706139484-eu-west-1'
    sourceFolder: '$(Build.SourcesDirectory)/AWS/GreenGrass/artifacts'
    globExpressions: '**'
    targetFolder: 'artifacts'
    createBucket: true
  condition: and(succeeded(),(eq(variables.newGreengrassComponent, true))


- task: AWSCLI@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    awsCommand: 'greengrassv2'
    awsSubCommand: 'create-component-version'
    awsArguments: '--inline-recipe fileb://$(Build.SourcesDirectory)/AWS/GreenGrass/WildlifePICamera.json'
  condition: and(succeeded(),(eq(variables.newGreengrassComponent, true))

- task: AWSCLI@1
  inputs:
    awsCredentials: 'WildlifePipeline'
    regionName: 'eu-west-1'
    awsCommand: 'greengrassv2'
    awsSubCommand: 'create-deployment'
    awsArguments: '--cli-input-json file://$(Build.SourcesDirectory)/AWS/GreenGrass/WildlifePICameraDeploy.json'
  condition: and(succeeded(),(eq(variables.newGreengrassDeployment, true))
